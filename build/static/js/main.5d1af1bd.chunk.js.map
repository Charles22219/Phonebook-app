{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","handleFilterChange","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","addPerson","onSubmit","type","Persons","persons","filter","deletePerson","person","name","toLowerCase","includes","map","key","number","onClick","id","Notification","message","className","status","content","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","hasDuplicate","length","event","target","nameObject","preventDefault","console","log","window","confirm","returnedPerson","concat","setTimeout","catch","error","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d1af1bd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({value, handleFilterChange}) => {\r\n    return (\r\n        <div>\r\n        filter shown with: <input value={value} onChange={handleFilterChange} /><br />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({ newName, newNumber, handleNameChange, handleNumberChange, addPerson}) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} /><br />\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({ persons, filter, deletePerson }) => {\r\n    return (\r\n        persons.filter((person => person.name.toLowerCase().includes(filter.toLowerCase())))\r\n            .map(person =>\r\n                <div key={person.name}>\r\n                    {person.name} {person.number}\r\n                    <button onClick={() => deletePerson(person.id)}>delete</button>\r\n                </div>\r\n            )\r\n    );\r\n};\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message.status}>\r\n        {message.content}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification;","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => axios.delete(`${baseUrl}/${id}`);\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport axios from 'axios'\nimport personService from './services/persons'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    event.preventDefault()\n    if (hasDuplicate()) {\n      const id = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())[0].id\n      console.log(id);\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService.update(id, nameObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== returnedPerson.id ? person : nameObject))\n            setNewName('')\n            setNewNumber('')\n          }\n\n          )\n      };\n    }\n    else {\n      personService.create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage(\n            {\n              content: `Added ${returnedPerson.name}`,\n              status: 'success'\n            }\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          console.log(error.response.data.error);\n          setMessage(\n            {\n              content: error.response.data.error,\n              status: 'error'\n            }\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n\n        })\n    }\n  }\n  const deletePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    personService.remove(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n      .catch(error => {\n        setMessage({\n          content: `Information of ${person.name} has already been removed from server`,\n          status: 'error'\n        })\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.id !== id))\n      }\n\n\n      )\n  }\n\n  const hasDuplicate = () => persons.filter(person => person.name.toLowerCase() === newName.toLowerCase()).length > 0 ? true : false\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter value={filter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}